{
  "version": 3,
  "sources": ["../../../app/utils/zod.ts"],
  "sourcesContent": ["// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/utils/zod.ts\"\n);\nimport.meta.hot.lastModified = \"1737642690842.8215\";\n}\n// REMIX HMR END\n\nimport { z } from \"zod\";\n\nexport const customInputSchema = z\n  .object({\n    name: z.string(),\n    title: z\n      .string()\n      .min(1, { message: \"Escribe un titulo para identificar tu input\" }),\n    placeholder: z.string().optional(),\n    isRequired: z.coerce\n      .string()\n      .optional()\n      .transform((v) => (v === \"true\" || v === \"on\" ? true : false)),\n    type: z.union([\n      z.literal(\"select\"),\n      z.literal(\"text\"),\n      z.literal(\"textarea\"),\n    ]), // @TODO: separate types validation\n    options: z\n      .array(z.string().min(3, \"Las opciones no pueden estar vac\u00EDas\"))\n      .optional()\n      .default([]), // @TODO: separate types validation\n  })\n  // maybe not needed?\n  .superRefine((values, context) => {\n    if (values.type === \"select\") {\n      if (values.options.length < 2) {\n        context.addIssue({\n          code: z.ZodIssueCode.custom,\n          message: \"Agrega cuando menos dos opciones\",\n          path: [\"options\"],\n        });\n      }\n      if (values.type === \"select\") {\n        if (!values.placeholder || values.placeholder === \"\") {\n          context.addIssue({\n            code: z.ZodIssueCode.custom,\n            message: \"El placeholder es necesario para un campo de selecci\u00F3n\",\n            path: [\"placeholder\"],\n          });\n        }\n      }\n    }\n  });\n\nexport type CustomInputType = z.infer<typeof customInputSchema>;\n\nexport const extraDataSchema = z.object({\n  email: z.string().email(),\n  picture: z.string(),\n});\nexport type ExtraData = z.infer<typeof extraDataSchema>;\n\nconst literalSchema = z.union([z.string(), z.number(), z.boolean(), z.null()]);\ntype Literal = z.infer<typeof literalSchema>;\ntype Json = Literal | { [key: string]: Json } | Json[];\nconst jsonSchema: z.ZodType<Json> = z.lazy(() =>\n  z.union([literalSchema, z.array(jsonSchema), z.record(jsonSchema)])\n);\n\nexport const answerSchema = z.object({\n  id: z.string(),\n  opened: z.boolean().optional(),\n  deleted: z.boolean().optional(),\n  favorite: z.boolean(),\n  data: z.union([\n    z.object({\n      email: z.string().email(),\n      name: z.string().optional(),\n      company: z.string().optional(),\n      message: z.string().optional(),\n      phone: z.string().optional(),\n    }),\n    z.any(), // @TODO custom inputs?\n  ]),\n  schema: z.any(),\n  projectId: z.string(),\n  userId: z.string().optional(),\n  createdAt: z.date(),\n});\nexport type AnswerType = z.infer<typeof answerSchema>;\n\nexport const userSchema = z.object({\n  name: z.string().optional().nullable(),\n  picture: z.string().optional(),\n  email: z.string().email(),\n  id: z.string(),\n  provider: z.string().optional(),\n  access_token: z.string().optional(),\n  refresh_token: z.string().optional(),\n});\n\nexport type UserType = z.infer<typeof userSchema>;\n\nconst booleanString = z\n  .string()\n  .optional()\n  // .refine((value) => value === \"true\" || value === \"false\", {\n  //   message: \"El valor debe ser booleano\",\n  // })\n  .transform((value) => value === \"true\");\n\nexport const notificationsSchema = z.object({\n  new: booleanString,\n  members: booleanString,\n  warning: booleanString,\n});\n\nexport type Notifications = z.infer<typeof notificationsSchema>;\n\nexport const projectSettingsSchema = z.object({\n  notifications: notificationsSchema,\n});\n\nexport const configSchema = z.object({\n  theme: z.union([z.literal(\"light\"), z.literal(\"dark\")]),\n  ctaColor: z.string().min(7),\n  inputs: z.array(z.string()),\n  border: z.union([z.literal(\"redondo\"), z.literal(\"cuadrado\")]),\n  customInputs: z.array(customInputSchema),\n  watermark: z.boolean().optional().nullable(),\n  message: z.string().optional(),\n  icon: z.string().optional(),\n  confetti: z.string().optional(),\n});\nexport type ConfigSchema = z.infer<typeof configSchema>;\n\nexport const projectSchema = z.object({\n  id: z.string().optional(),\n  slug: z.string(),\n  name: z.string(),\n  email: z.string().email().optional(),\n  userId: z.string(),\n  answers: z.array(answerSchema).optional(),\n  config: configSchema.nullable(),\n  settings: projectSettingsSchema.optional(),\n});\n\nexport type ProjectType = z.infer<typeof projectSchema>;\n\nexport const messageSchema = z.object({\n  icon: z.string().nullable(),\n  message: z.string().min(10),\n  confetti: z.union([z.literal(\"paper\"), z.literal(\"emoji\")]).nullable(),\n  theme: z.union([z.literal(\"light\"), z.literal(\"dark\")]),\n  ctaColor: z.string().min(7),\n  inputs: z.array(z.string()),\n  border: z.union([z.literal(\"redondo\"), z.literal(\"cuadrado\")]),\n});\nexport type MessageSchema = z.infer<typeof messageSchema>;\n"],
  "mappings": "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",
  "names": []
}
