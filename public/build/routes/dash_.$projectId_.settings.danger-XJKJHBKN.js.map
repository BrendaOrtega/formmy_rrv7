{
  "version": 3,
  "sources": ["../../../app/routes/dash_.$projectId_.settings.danger.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/dash_.$projectId_.settings.danger.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/dash_.$projectId_.settings.danger.tsx\");\n  import.meta.hot.lastModified = \"1737595661959.4724\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useState } from \"react\";\nimport { redirect, useFetcher, useLoaderData } from \"react-router-dom\";\nimport { Button } from \"~/components/Button\";\nimport ConfirmModal from \"~/components/ConfirmModal\";\nimport Spinner from \"~/components/Spinner\";\n// import { useToastV1 } from \"~/components/Toast\";\nimport { TextField } from \"~/components/formmys/FormyV1\";\nimport { db } from \"~/utils/db.server\";\nexport const action = async ({\n  params,\n  request\n}) => {\n  const intent = (await request.formData()).get(\"intent\");\n  if (intent === \"delete\") {\n    // @TODO: delete files from firebase\n    await db.answer.deleteMany({\n      where: {\n        projectId: params.projectId\n      }\n    }); // cascade deleting\n    await db.project.delete({\n      where: {\n        id: params.projectId\n      }\n    });\n    return redirect(\"/dash\");\n  }\n  return null;\n};\nexport const loader = async ({\n  params\n}) => {\n  const project = await db.project.findUnique({\n    where: {\n      id: params.projectId\n    }\n  });\n  if (!project) throw json(null, {\n    status: 404\n  });\n  return {\n    project\n  };\n};\nexport default function Page() {\n  _s();\n  const {\n    project\n  } = useLoaderData();\n  const fetcher = useFetcher();\n  const [match, set] = useState(\"\");\n  const [showConfirm, setShowConfirm] = useState(false);\n  // const { toast } = useToastV1();\n\n  const handleDelete = () => {\n    fetcher.submit({\n      intent: \"delete\"\n    }, {\n      method: \"post\"\n    });\n    // toast({ text: \"Tu formmy se ha eliminado correctamente \uD83E\uDD7A\" });\n  };\n\n  /* <Suspense fallback={null}>{toasters}</Suspense> @TODO: global toastr????? */\n  return <>\n      <section className=\"flex flex-col\">\n        <div className=\"flex gap-2\">\n          <h2 className=\"text-xl font-bold truncate\">\n            Configuraci\u00F3n {project.name}\n          </h2>\n          {fetcher.state !== \"idle\" && <Spinner />}\n        </div>\n        <hr className=\"mt-2 mb-6 dark:border-t-white/10\" />\n        <div className=\"flex flex-col gap-14 p-4 border-2 border-[#FB5252] rounded-xl dark:bg-red-100\n         bg-red-100/50\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"font-bold text-md text-red-500\">\n                Esto eliminar\u00E1 tu Formmy y todos sus mensajes\n              </p>\n              <p className=\"font-light text-sm text-red-700\">\n                Si tienes alguna duda, recuerda que siempre podemos platicar:{\" \"}\n                <a href=\"mailto:hola@formmy.app\">hola@formmy.app</a>\n              </p>\n            </div>\n            <Button isLoading={fetcher.state !== \"idle\"} onClick={() => setShowConfirm(true)} className=\"bg-[#FB5252] hover:scale-95 transition-all text-xs m-0\" type=\"submit\">\n              Eliminar Formmy\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      <ConfirmModal onClose={() => setShowConfirm(false)} isOpen={showConfirm} title=\"\u00BFEst\u00E1s segur@ de eliminar este Formmy?\" message=\"Si lo eliminas, dejar\u00E1s de recibir mensajes y todos los mensajes que\n            ten\u00EDas se eliminar\u00E1n autom\u00E1ticamente.\" footer={<div className=\"flex mb-8\">\n            <Button autoFocus onClick={() => setShowConfirm(false)} className=\"bg-gray-300 text-space-700\">\n              Cancelar\n            </Button>\n            <Button isLoading={fetcher.state !== \"idle\"} onClick={match === project.name ? handleDelete : undefined} isDisabled={match !== project.name} className=\"bg-red-400 text-red-100 not:disabled:hover:scale-105 transition-all disabled:bg-gray-500 disabled:text-gray-800\">\n              S\u00ED, eliminar\n            </Button>\n          </div>}>\n        <form onSubmit={e => {\n        e.preventDefault();\n        if (match === project.name) {\n          handleDelete();\n        }\n      }}>\n          <TextField onChange={value => set(value)} name=\"name\" label={`Escribe el nombre del Formmy: ${project.name}`} type=\"text\" placeholder={project.name} className=\"mb-0\" autocomplete=\"off\" onPaste={e => e.preventDefault()} />\n        </form>\n      </ConfirmModal>\n    </>;\n}\n_s(Page, \"T/Z+DG4YwVYdMG+bpRXNkJlnMQo=\", false, function () {\n  return [useLoaderData, useFetcher];\n});\n_c = Page;\nvar _c;\n$RefreshReg$(_c, \"Page\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
