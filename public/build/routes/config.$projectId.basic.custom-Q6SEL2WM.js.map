{
  "version": 3,
  "sources": ["../../../app/routes/config.$projectId.basic.custom.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/config.$projectId.basic.custom.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/config.$projectId.basic.custom.tsx\");\n  import.meta.hot.lastModified = \"1708284120292.0605\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useFetcher } from \"@remix-run/react\";\nimport Modal from \"~/components/Modal\";\nimport { Toggle } from \"~/components/Switch\";\nimport { TextField } from \"~/components/formmys/FormyV1\";\nimport { db } from \"~/utils/db.server\";\nimport { SelectableImage } from \"./config.$projectId.basic\";\nimport { useState } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\nimport { customInputSchema } from \"~/utils/zod\";\nimport { Button } from \"~/components/Button\";\nimport { FaRegTrashAlt } from \"react-icons/fa\";\nconst parseZodIssues = error => error ? JSON.parse(error).reduce((acc, err) => ({\n  ...acc,\n  [err.path[0]]: err.message\n}), {}) : {};\nexport const loader = async ({\n  params\n}) => {\n  const project = await db.project.findUnique({\n    where: {\n      id: params.projectId\n    }\n  });\n  if (!project) return json(null, {\n    status: 404\n  });\n  return {\n    project\n  };\n};\nexport const action = async ({\n  request,\n  params\n}) => {\n  const formData = await request.formData();\n  const {\n    data,\n    success,\n    error\n  } = customInputSchema.safeParse(JSON.parse(formData.get(\"data\")));\n  if (!success) return json({\n    error\n  }, {\n    status: 400\n  });\n  // intents\n  if (formData.get(\"intent\") === \"add_custom_input\") {\n    const project = await db.project.findUnique({\n      where: {\n        id: params.projectId\n      }\n    });\n    if (!project) return json(null, {\n      status: 404\n    });\n    await db.project.update({\n      where: {\n        id: params.projectId\n      },\n      data: {\n        config: {\n          ...project.config,\n          customInputs: [...(project.config?.customInputs.length ? project.config?.customInputs : []), data]\n        }\n      }\n    });\n    // redirect on success\n    // throw redirect(`/config/${project.id}/basic`);\n    return redirect(`/config/${project.id}/basic`);\n    // return new Response(null, {\n    //   status: 303,\n    //   headers: {\n    //     Location: `/config/${project.id}/basic`,\n    //   },\n    // });\n  }\n};\nconst initialErrors = {\n  options: undefined,\n  type: null,\n  title: undefined,\n  placeholder: undefined\n};\nexport default function Route() {\n  _s();\n  const [isSelect, setIsSelect] = useState(false);\n  const [errors, setErrors] = useState(initialErrors); // undefined is better for component props\n  const fetcher = useFetcher();\n  //   const { project } = useLoaderData<typeof loader>();\n\n  const handleValidation = form => {\n    let result = customInputSchema.safeParse(form);\n    if (isSelect) {\n      result = customInputSchema.safeParse(form); // @TODO: select validation\n    }\n    if (!result.success) {\n      console.error(result.error);\n      setErrors(parseZodIssues(result.error));\n    } else {\n      setErrors(initialErrors);\n    }\n    return result;\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formData = new FormData(event.currentTarget);\n    const params = new URLSearchParams(formData);\n    const form = Object.fromEntries(formData);\n    form.options = [...params.getAll(\"option\")]; // @TODO: better way? from form directly?\n    form.name = form.title; // @TODO: Name Should be placed by zod\n    const {\n      success,\n      data\n    } = handleValidation(form);\n    if (!success) return;\n    fetcher.submit({\n      data: JSON.stringify(data),\n      intent: \"add_custom_input\"\n    }, {\n      method: \"post\"\n    });\n  };\n  const renderError = error => <span className=\"text-red-500 text-xs h-[1px] block\">{error}</span>;\n  return <Modal title=\"Agrega tu propio campo\">\n      <Form onSubmit={handleSubmit} method=\"post\" className=\"flex flex-col gap-6 py-6\">\n        <label className=\"text-base font-normal text-gray-600 dark:text-space-400\">\n          \u00BFQu\u00E9 tipo de campo que quieres agregar?\n        </label>\n        <fieldset className={twMerge(\"flex gap-4 justify-between\", errors.type && \"border-2 rounded-xl border-red-500 p-2\")}>\n          <SelectableImage onClick={() => setIsSelect(false)} defaultValue=\"text\" text=\"Texto\" name=\"type\" src={\"/assets/custom-input/input-selection.svg\"} />\n          <SelectableImage onClick={() => setIsSelect(true)} defaultValue=\"select\" text=\"Selecci\u00F3n\" name=\"type\" src={\"/assets/custom-input/select-selection.svg\"} />\n        </fieldset>\n        {errors.type && renderError(\"Selecciona un tipo de input\")}\n        <TextField className=\"mb-0 placeholder:text-space-300 dark:placeholder:text-space-500 font-light\" label={<label className=\"text-base font-normal  text-gray-600 dark:text-space-400\" htmlFor=\"title\">\n              \u00BFQu\u00E9 titulo/label tendr\u00E1 el campo?\n            </label>} name=\"title\" placeholder=\"Por ejemplo: Edad\" error={errors.title && renderError(errors.title)} />\n\n        <TextField className=\"mb-0 placeholder:text-space-300 font-light\" label={<label className=\"text-base font-normal  text-gray-600 dark:text-space-400\" htmlFor=\"title\">\n              \u00BFQu\u00E9 placeholder tendr\u00E1? (opcional)\n            </label>} name=\"placeholder\" placeholder=\"Por ejemplo: Tecnolog\u00EDa\" error={errors.placeholder && renderError(errors.placeholder)} />\n        {isSelect && <Options error={errors.options && renderError(errors.options)} />}\n\n        <label className=\" text-gray-600 dark:text-space-300 text-base font-normal flex justify-between items-center\">\n          \u00BFEs este campo obligatorio?\n          <Toggle name=\"isRequired\" />\n        </label>\n        <Button type=\"submit\" autoFocus isLoading={fetcher.state !== \"idle\"} />\n      </Form>\n    </Modal>;\n}\n_s(Route, \"q2S5KAevhehWTtXS+QRrJGHXFzU=\", false, function () {\n  return [useFetcher];\n});\n_c = Route;\nconst Options = ({\n  error\n}) => {\n  _s2();\n  const [options, setOptions] = useState([null, null]);\n  const addOption = () => setOptions(ops => [...ops, null]);\n  const removeOption = index => {\n    // if (options.length < 2) return;\n    const newArr = [...options];\n    newArr.splice(index, 1);\n    setOptions(newArr);\n  };\n  return <label className=\"text-base font-normal  text-gray-600 dark:text-space-400\">\n      <span>\u00BFCu\u00E1les son las opciones dispon\u00EDbles?</span>\n      <div className={twMerge(error && \"border-2 border-red-500 rounded-lg\", \"grid grid-cols-2 columns-2 gap-2 overflow-y-scroll max-h-52 focus:border-yellow-50 mt-2\")}>\n        {options.map((_, index) => <div key={index} className=\"relative\">\n            <TextField className=\"mb-0 flex-1 placeholder:text-space-300 font-light\" name=\"option\" placeholder={`Opci\u00F3n #${index + 1}`} />\n            {index > 1 && <button onClick={() => removeOption(index)} type=\"button\" className=\"hover:scale-110 absolute right-2 top-3\">\n                <FaRegTrashAlt />\n              </button>}\n          </div>)}\n      </div>\n      <p className=\"text-red-500 text-xs m-1\">{error}</p>\n      <button type=\"button\" onClick={addOption} className=\"text-gray-600 dark:text-gray-400 font-light \">\n        + Agrega otra\n      </button>\n    </label>;\n};\n_s2(Options, \"Ee5KSTi89vFu6FAnFQUMWQfDLPs=\");\n_c2 = Options;\nvar _c, _c2;\n$RefreshReg$(_c, \"Route\");\n$RefreshReg$(_c2, \"Options\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}
