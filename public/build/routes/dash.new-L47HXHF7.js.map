{
  "version": 3,
  "sources": ["../../../app/routes/dash.new.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/dash.new.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/dash.new.tsx\");\n  import.meta.hot.lastModified = \"1737642690814.8064\";\n}\n// REMIX HMR END\n\nimport { redirect, json } from \"@remix-run/node\";\nimport Modal from \"~/components/Modal\";\nimport { getUserOrRedirect } from \"./dash\";\nimport { projectSchema } from \"~/utils/zod\";\nimport { db } from \"~/utils/db.server\";\nimport { Form, useActionData, useNavigation } from \"@remix-run/react\";\nimport Spinner from \"~/components/Spinner\";\nimport { slugify } from \"~/utils/slugify\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { IconCube } from \"~/components/IconCube\";\nimport { useState } from \"react\";\nexport const action = async ({\n  request\n}) => {\n  const user = await getUserOrRedirect(request);\n  const formData = await request.formData();\n  const intent = formData.get(\"intent\");\n  if (intent === \"create\") {\n    const slug = slugify(String(formData.get(\"name\")) + uuidv4()); // This is cool ha? Yep.\n    const body = {\n      slug,\n      name: formData.get(\"name\"),\n      userId: user.id,\n      email: user.email,\n      type: formData.get(\"type\"),\n      config: {\n        watermark: false,\n        theme: \"dark\",\n        ctaColor: \"#9b9aea\",\n        inputs: [\"email\"],\n        border: \"redondo\",\n        icon: \"/assets/mail-noti.svg\",\n        message: \"Tu mensaje ha sido enviado. Nos pondremos en contacto contigo lo antes posible.\",\n        confetti: \"emoji\",\n        customInputs: []\n      }\n    };\n    const validated = projectSchema.safeParse(body);\n    if (!validated.success) {\n      return json({\n        ok: false,\n        error: {\n          issues: [{\n            path: \"Nombre\",\n            message: \"Ya tienes un proyecto con ese nombre\"\n          }]\n        }\n      }, {\n        status: 400\n      });\n    }\n    const newProject = await db.project.create({\n      data: body\n    });\n    return redirect(`/config/${newProject.id}/basic`);\n  }\n  return null;\n};\nexport default function New() {\n  _s();\n  const navigation = useNavigation();\n  const actionData = useActionData();\n  const handleFormmyTypeChange = type => {};\n  return <>\n      <Modal>\n        <div>\n          <Form method=\"post\" className=\"px-6 py-8 md:pb-10 md:pt-0 gap-2 bg-clear dark:bg-space-900 rounded-3xl dark:text-white text-space-900 \">\n            <h2 className=\"font-bold mb-10 text-2xl text-left mt-6 md:mt-0\">\n              Ponle nombre a tu Formmy\n            </h2>\n            <div className=\"flex w-full\">\n              <input name=\"name\" required placeholder=\"Nombre de tu proyecto \" className=\"h-10  input font-normal w-full md:w-80 border-[1px] border-gray-100 dark:border-clear/30 dark:bg-transparent focus:outline-none focus:ring-0 bg-transparent focus:border-brand-500 rounded-bl-lg rounded-tl-lg placeholder:text-space-300\" />\n\n              <button name=\"intent\" value=\"create\" type=\"submit\" className=\"bg-brand-500 h-10 text-clear py-2 px-4 md:px-8 rounded-br-lg rounded-tr-lg\">\n                <div className=\"w-10 h-6\">\n                  {navigation.state !== \"idle\" ? <Spinner /> : \"Crear\"}\n                </div>\n              </button>\n            </div>\n            <p className=\"mt-6 text-gray-600 dark:text-space-300\">\n              Escoge el tipo de Formmy\n            </p>\n            <FormmyTypeSelect />\n\n            <div className=\"h-6\">\n              {!actionData?.ok && actionData?.error.issues.map(issue => <p key={issue.code} className=\"text-red-500 \">\n                    {issue.message}\n                  </p>)}\n            </div>\n          </Form>\n        </div>\n      </Modal>\n    </>;\n}\n_s(New, \"1AETIiPCWpdcL3+sPGUbmCFrInE=\", false, function () {\n  return [useNavigation, useActionData];\n});\n_c = New;\nconst FormmyTypeSelect = ({\n  onChange,\n  defaultValue = \"contact\"\n}) => {\n  _s2();\n  const [selected, setSelected] = useState(defaultValue);\n  return <section className=\"mt-4 flex gap-4 items-center\">\n      <input type=\"hidden\" name=\"type\" value={selected} />\n      <div>\n        <IconCube isSelected={selected === \"subscription\"} className=\" h-full w-[200px] dark:hidden block \" src=\"/assets/hero/add-suscription-w.png \" onClick={() => setSelected(\"subscription\")} />\n        <IconCube isSelected={selected === \"subscription\"} className=\" h-auto w-[200px] hidden dark:block  bg-transparent\" onClick={() => setSelected(\"subscription\")} src=\"/assets/hero/add-suscription-d.png \" />\n        <p className=\"text-gray-600 dark:text-space-300 font-light text-center text-xs pt-3\">\n          Formulario de suscripci\u00F3n\n        </p>\n      </div>\n      <div>\n        {\" \"}\n        <IconCube isSelected={selected === \"contact\"} className=\" h-auto w-[200px] dark:hidden block\" onClick={() => setSelected(\"contact\")} src=\"/assets/hero/add-form-w.png\" />\n        <IconCube isSelected={selected === \"contact\"} className=\" h-auto w-[200px] hidden dark:block bg-transparent\" onClick={() => setSelected(\"contact\")} src=\"/assets/hero/add-form-d.png\" />\n        <p className=\"text-gray-600 dark:text-space-300 font-light text-center text-xs pt-3\">\n          Formulario de contacto\n        </p>\n      </div>\n    </section>;\n};\n_s2(FormmyTypeSelect, \"+je1LhJiKYRwlU9jgDfC/VH7l5o=\");\n_c2 = FormmyTypeSelect;\nvar _c, _c2;\n$RefreshReg$(_c, \"New\");\n$RefreshReg$(_c2, \"FormmyTypeSelect\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}
