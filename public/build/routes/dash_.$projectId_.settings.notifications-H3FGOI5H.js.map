{
  "version": 3,
  "sources": ["../../../app/routes/dash_.$projectId_.settings.notifications.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/dash_.$projectId_.settings.notifications.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/dash_.$projectId_.settings.notifications.tsx\");\n  import.meta.hot.lastModified = \"1707709500260.7522\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useFetcher, useLoaderData } from \"@remix-run/react\";\nimport { ProTag } from \"~/components/ProTag\";\nimport Spinner from \"~/components/Spinner\";\nimport { Toggle } from \"~/components/Switch\";\nimport { db } from \"~/utils/db.server\";\nimport { getUserOrNull } from \"~/utils/getUserUtils\";\nimport { notificationsSchema } from \"~/utils/zod\";\nexport const action = async ({\n  request,\n  params\n}) => {\n  const formData = await request.formData();\n  const notifications = Object.fromEntries(formData);\n  const validData = notificationsSchema.parse(notifications);\n  await db.project.update({\n    where: {\n      id: params.projectId\n    },\n    data: {\n      settings: {\n        notifications: validData\n      }\n    }\n  });\n  return null;\n};\n\n// @TODO we need to know if user is prom in this route\nexport const loader = async ({\n  params,\n  request\n}) => {\n  const user = await getUserOrNull(request); // why? well, not sure... just don't want to redirect.\n  const project = await db.project.findUnique({\n    where: {\n      id: params.projectId\n    }\n  });\n  if (!project) throw json(null, {\n    status: 404\n  });\n  const isPro = user?.plan === \"PRO\" ? true : false;\n  return {\n    // isPro: true,\n    isPro,\n    notifications: project.settings?.notifications\n  };\n};\nexport default function Route() {\n  _s();\n  const {\n    notifications = {\n      new: true,\n      members: false,\n      warning: false\n    },\n    // true defaults ;)\n    isPro\n  } = useLoaderData();\n  // let settings = {};\n  const fetcher = useFetcher();\n  const updateSettingsWarning = bool => fetcher.submit({\n    ...notifications,\n    warning: bool\n  }, {\n    method: \"post\"\n  });\n  const updateSettingsMembers = bool => fetcher.submit({\n    ...notifications,\n    members: bool\n  }, {\n    method: \"post\"\n  });\n  const updateSettingsNew = bool => {\n    if (!isPro) {\n      fetcher.submit({\n        new: bool,\n        members: false,\n        warning: false\n      }, {\n        method: \"post\"\n      });\n      return;\n    }\n    fetcher.submit({\n      ...notifications,\n      new: bool\n    }, {\n      method: \"post\"\n    });\n  };\n  return <section className=\"flex flex-col\">\n      <div className=\"flex gap-2\">\n        <h2 className=\"text-xl font-bold\">Notificaciones por email</h2>\n        {fetcher.state !== \"idle\" && <Spinner />}\n      </div>\n      <hr className=\"mt-2 mb-6 dark:border-t-white/10\" />\n      <div className=\"flex flex-col gap-14\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <p className=\"font-bold text-md\">Nuevos mensajes</p>\n            <p className=\"font-light text-sm text-gray-500\">\n              Recibe un correo cada que tu Formmy recibe un nuevo mensaje.\n            </p>\n          </div>\n          <Toggle onChange={updateSettingsNew} name=\"new\" defaultValue={notifications.new} />\n        </div>\n\n        <div className=\"flex justify-between\">\n          <div>\n            <p className=\"font-bold text-md\">Cambio en los miembros</p>\n            <p className=\"font-light text-sm text-gray-500\">\n              Recibe un correo cuando un nuevo usuario acepte tu invitaci\u00F3n\n            </p>\n          </div>\n          <div className=\"relative\">\n            <Toggle onChange={updateSettingsMembers} isDisabled={!isPro} defaultValue={notifications.members} />\n            {!isPro && <ProTag />}\n          </div>\n        </div>\n\n        <div className=\"flex justify-between\">\n          <div>\n            <p className=\"font-bold text-md\">Actividad en tu formmy</p>\n            <p className=\"font-light text-sm text-gray-500\">\n              Recibe un correo cuando se apliquen cambios importantes en tu\n              Formmy (como al eliminar mensajes)\n            </p>\n          </div>\n          <div className=\"relative\">\n            {!isPro && <ProTag />}\n            <Toggle onChange={updateSettingsWarning} isDisabled={!isPro} defaultValue={notifications.warning} />\n          </div>\n        </div>\n      </div>\n    </section>;\n}\n_s(Route, \"SsZl5GUz9E3/hafwU4ixIBHpxJM=\", false, function () {\n  return [useLoaderData, useFetcher];\n});\n_c = Route;\nvar _c;\n$RefreshReg$(_c, \"Route\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
