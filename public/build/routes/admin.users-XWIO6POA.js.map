{
  "version": 3,
  "sources": ["../../../app/routes/admin.users.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/admin.users.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/admin.users.tsx\");\n  import.meta.hot.lastModified = \"1713710121960.1829\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { db } from \"~/utils/db.server\";\nimport { getAdminUserOrRedirect } from \"~/utils/getUserUtils\";\nimport { Row } from \"./admin.projects\";\nexport const loader = async ({\n  request\n}) => {\n  await getAdminUserOrRedirect(request);\n  const users = await db.user.findMany({\n    select: {\n      name: true,\n      createdAt: true,\n      id: true,\n      email: true\n    },\n    orderBy: {\n      createdAt: \"desc\"\n    }\n  });\n  if (!users || !users.length) {\n    throw json(null, {\n      status: 404\n    });\n  }\n  const sevenDaysAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\n  const thisWeek = await db.user.count({\n    where: {\n      createdAt: {\n        lte: new Date(),\n        gte: sevenDaysAgo\n      }\n    }\n  });\n  return {\n    users,\n    totals: {\n      all: users.length,\n      thisWeek: thisWeek\n    }\n  };\n};\nexport default function Page() {\n  _s();\n  const {\n    users,\n    totals\n  } = useLoaderData();\n  return <article className=\"mx-auto max-w-5xl px-6 py-20\">\n      <h2 className=\"font-bold text-3xl\">Recent users</h2>\n      <section className=\"flex py-2 px-4 rounded gap-4\">\n        <div className=\"flex\">\n          <span>Usuarios en total: </span>\n          <strong>{totals.all}</strong>\n        </div>\n        <div className=\"flex\">\n          <span>Usuarios agregados esta semana:</span>\n          <strong className=\"text-brand-500\">{totals.thisWeek}</strong>\n        </div>\n      </section>\n      <section id=\"table\">\n        <Row>\n          <span>Usuario</span>\n          <span>Nombre</span>\n          <span>Fecha</span>\n        </Row>\n        {users.map(p => <Row key={p.id}>\n            <span>{p.email}</span>\n            <span>{p.name}</span>\n            <span>{new Date(p.createdAt).toLocaleString()}</span>\n          </Row>)}\n      </section>\n    </article>;\n}\n_s(Page, \"O+XbAhDRAm9pMJySCDCSssFpgFc=\", false, function () {\n  return [useLoaderData];\n});\n_c = Page;\nvar _c;\n$RefreshReg$(_c, \"Page\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;AAErB,gBAAmB;AA+Cb;AArEN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,iCAAmC,EAAE;AAAA,EAC9E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA4B;AAC5B,cAAY,IAAI,eAAe;AACjC;AA6Ce,SAAR,OAAwB;AAC7B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,mDAAC,aAAQ,WAAU,gCACtB;AAAA,uDAAC,QAAG,WAAU,sBAAqB,4BAAnC;AAAA;AAAA;AAAA;AAAA,WAA+C;AAAA,IAC/C,mDAAC,aAAQ,WAAU,gCACjB;AAAA,yDAAC,SAAI,WAAU,QACb;AAAA,2DAAC,UAAK,mCAAN;AAAA;AAAA;AAAA;AAAA,eAAyB;AAAA,QACzB,mDAAC,YAAQ,iBAAO,OAAhB;AAAA;AAAA;AAAA;AAAA,eAAoB;AAAA,WAFtB;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC,SAAI,WAAU,QACb;AAAA,2DAAC,UAAK,+CAAN;AAAA;AAAA;AAAA;AAAA,eAAqC;AAAA,QACrC,mDAAC,YAAO,WAAU,kBAAkB,iBAAO,YAA3C;AAAA;AAAA;AAAA;AAAA,eAAoD;AAAA,WAFtD;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,SARF;AAAA;AAAA;AAAA;AAAA,WASA;AAAA,IACA,mDAAC,aAAQ,IAAG,SACV;AAAA,yDAAC,OACC;AAAA,2DAAC,UAAK,uBAAN;AAAA;AAAA;AAAA;AAAA,eAAa;AAAA,QACb,mDAAC,UAAK,sBAAN;AAAA;AAAA;AAAA;AAAA,eAAY;AAAA,QACZ,mDAAC,UAAK,qBAAN;AAAA;AAAA;AAAA;AAAA,eAAW;AAAA,WAHb;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACC,MAAM,IAAI,OAAK,mDAAC,OACb;AAAA,2DAAC,UAAM,YAAE,SAAT;AAAA;AAAA;AAAA;AAAA,eAAe;AAAA,QACf,mDAAC,UAAM,YAAE,QAAT;AAAA;AAAA;AAAA;AAAA,eAAc;AAAA,QACd,mDAAC,UAAM,cAAI,KAAK,EAAE,SAAS,EAAE,eAAe,KAA5C;AAAA;AAAA;AAAA;AAAA,eAA8C;AAAA,WAHxB,EAAE,IAAZ;AAAA;AAAA;AAAA;AAAA,aAId,CAAM;AAAA,SAVV;AAAA;AAAA;AAAA;AAAA,WAWA;AAAA,OAvBG;AAAA;AAAA;AAAA;AAAA,SAwBL;AACJ;AACA,GAAG,MAAM,gCAAgC,OAAO,WAAY;AAC1D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,MAAM;AAEvB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
